# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Signal Demodulation

# The version string should be updated whenever changes are made to this config file
version: 1.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: SignalDemodulation

# Flags for defining signal generator or signal analyzer functionality
signal_generator: True
signal_analyzer: True

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = False


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[Modulation frequency]
datatype: DOUBLE
def_value: 100E6
unit: Hz
show_in_measurement_dlg: True

[Skip start]
datatype: DOUBLE
def_value: 0.0
unit: s
show_in_measurement_dlg: True

[Length]
datatype: DOUBLE
def_value: 1E-6
unit: s
show_in_measurement_dlg: True

[Number of segments]
datatype: DOUBLE
def_value: 1
show_in_measurement_dlg: True

[Use phase reference signal]
datatype: BOOLEAN
def_value: False
show_in_measurement_dlg: True

[Use IQ demodulation]
datatype: BOOLEAN
def_value: False
show_in_measurement_dlg: True

[Input I data]
unit: V
x_name: Time
x_unit: s
datatype: VECTOR
permission: WRITE
#group: Input
show_in_measurement_dlg: True

[Input Q data]
unit: V
x_name: Time
x_unit: s
state_quant: Use IQ demodulation
state_value_1: True
datatype: VECTOR
permission: WRITE
#group: Input
show_in_measurement_dlg: True

[Reference data]
unit: V
x_name: Time
x_unit: s
state_quant: Use phase reference signal
state_value_1: True
datatype: VECTOR
permission: WRITE
#group: Input
show_in_measurement_dlg: True

[Value]
datatype: COMPLEX
permission: READ
unit: V
#group: Output
show_in_measurement_dlg: True

[Value - Single shot]
datatype: VECTOR_COMPLEX
permission: READ
unit: V
#group: Output
show_in_measurement_dlg: True

[Mod. frequency #2]
datatype: DOUBLE
def_value: 0
unit: Hz
section: Multi Frequency
group: Multi Frequency

[Mod. frequency #3]
datatype: DOUBLE
def_value = 0
unit: Hz
section: Multi Frequency
group: Multi Frequency

[Mod. frequency #4]
datatype: DOUBLE
def_value = 0
unit: Hz
section: Multi Frequency
group: Multi Frequency

[Mod. frequency #5]
datatype: DOUBLE
def_value = 0
unit: Hz
section: Multi Frequency
group: Multi Frequency

[Mod. frequency #6]
datatype: DOUBLE
def_value = 0
unit: Hz
section: Multi Frequency
group: Multi Frequency

[Mod. frequency #7]
datatype: DOUBLE
def_value = 0
unit: Hz
section: Multi Frequency
group: Multi Frequency

[Mod. frequency #8]
datatype: DOUBLE
def_value = 0
unit: Hz
section: Multi Frequency
group: Multi Frequency

[Mod. frequency #9]
datatype: DOUBLE
def_value = 0
unit: Hz
section: Multi Frequency
group: Multi Frequency

[Value #2]
datatype: COMPLEX
permission: READ
unit: V
section: Multi Frequency
group: Multi Frequency

[Value #3]
datatype: COMPLEX
permission: READ
unit: V
section: Multi Frequency
group: Multi Frequency

[Value #4]
datatype: COMPLEX
permission: READ
unit: V
section: Multi Frequency
group: Multi Frequency

[Value #5]
datatype: COMPLEX
permission: READ
unit: V
section: Multi Frequency
group: Multi Frequency

[Value #6]
datatype: COMPLEX
permission: READ
unit: V
section: Multi Frequency
group: Multi Frequency

[Value #7]
datatype: COMPLEX
permission: READ
unit: V
section: Multi Frequency
group: Multi Frequency

[Value #8]
datatype: COMPLEX
permission: READ
unit: V
section: Multi Frequency
group: Multi Frequency

[Value #9]
datatype: COMPLEX
permission: READ
unit: V
section: Multi Frequency
group: Multi Frequency
