# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Rohde&Schwarz RF Source

# The version string should be updated whenever changes are made to this
# configuration file.
version: 1.4

# Name of folder containing the code defining a custom driver. Do not
# define this item or leave it blank for any standard driver based on
# the built-in VISA interface.
driver_path:

# Default interface and address.
interface: TCPIP
address: 192.168.1.131

startup: Get config

[Model and options]
# The option section allow instruments with different options to use
# the same driver.

# List of models supported by this driver.
model_str_1: SGS100A
model_str_2: SMW200A
model_str_3: SMB100A

# Check instrument model id at startup (True or False). Default is False
check_model: False

# Valid model strings returned by the instrument.
# Default value is equivalent to model_str.
# model_id_1:
# model_id_2:

# Check instrument options at startup (True or False). Default is False.
check_options: False

# If check_options is set to True, define command for getting options.
option_cmd: *OPT?

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False).
# If False, the driver will not perform any operations (unless there is
# a custom driver).
use_visa: True

# Reset the interface (not the instrument) at startup (True or False).
# Default is False.
reset: False

# Time (in seconds) before the timing out while waiting for
# an instrument response. Default is 5.
timeout: 5

# Query instrument errors (True or False). If True, every command sent
# to the device will be followed by an error query. This is useful when
# testing new setups, but may degrade performance by slowing down
# the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255,
# include all errors).
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages.
error_cmd: :SYST:SERR?

# Initialization commands are sent to the instrument when starting
# the driver. *RST will reset the device, *CLS clears the interface.
init:

# Final commands sent to the instrument when closing the driver.
final: 

# Define quantities in sections. The section name is the quantity name
# The following keywords are allowed:
#   unit:          Quantity unit.
#   enabled:	   Determines wether the control is enabled from start.
#                  Default is True.	
#   datatype:      The data type should be one of DOUBLE, COMPLEX,
#                  VECTOR, VECTOR_COMPLEX, BOOLEAN, COMBO, or STRING.
#   def_value:     Default value.
#   low_lim:       Lowest allowable value. Defaults to -INF.
#   high_lim:      Highest allowable values. Defaults to +INF.
#   combo_def_1:   First option in a pull-down combo box. Only used
#                  when datatype=COMBO.
#   combo_def_2:   Second option in a pull-down combo box. Only used
#                  when datatype=COMBO.
#   ...
#   combo_def_n:   n-th option in a pull-down combo box. Only used when
#                  datatype=COMBO.
#   group:         Name of the group where the control belongs.
#   state_quant:   Quantity that determines this control's visibility.
#   state_value_1: Value of "state_quant" for which the control is
#                  visible.
#   state_value_2: Value of "state_quant" for which the control is
#                  visible.
#   ...
#   state_value_n: Value of "state_quant" for which the control is
#                  visible.
#   permission:    Sets read/writability, options are BOTH, READ, WRITE,
#                  or NONE. Default is BOTH 
#   set_cmd:       Command used to send data to the instrument. Put <*>
#                  where the value should appear.
#   get_cmd:       Command used to get the data from the instrument.
#                  Default is set_cmd?
#   sweep_cmd:     Command used to sweep data. Use <sr> for sweep rate,
#                  <st> for sweep time, and <*> for the value.
#   stop_cmd:      Command used to stop a sweep.

[Frequency]
unit: Hz
datatype: DOUBLE
def_value: 5.0E9
set_cmd: :SOUR:FREQ

[Power]
unit: dBm
datatype: DOUBLE
def_value: -120
set_cmd: :SOUR:POW:POW

[Phase]
unit: rad
datatype: DOUBLE
def_value: 0
set_cmd: :SOUR:PHAS

[Mode]
tooltip: "Allows you to optimize the RF output signal for applications where improved harmonic distortion or improved wideband noise is required"
datatype: COMBO
combo_def_1: Normal
combo_def_2: Low Noise
combo_def_3: Low Distortion
cmd_def_1: NORM
cmd_def_2: LOWN
cmd_def_3: LOWD
set_cmd: :SOUR:POW:LMOD

[Automatic levelling control (ALC)]
datatype: COMBO
combo_def_1: ON
combo_def_2: OFF
combo_def_3: AUTO
cmd_def_1: 1
cmd_def_2: OFFT
cmd_def_3: ONT
def_value: ON
set_cmd: :SOUR:POW:ALC
model_value_1: SGS100A
model_value_2: SMW200A

[Output]
datatype: BOOLEAN
def_value: True
set_cmd: :OUTP

######################
# Oscillator Sources #
######################
[LO source]
tooltip: "Selects the source of the local oscillator signal"
datatype: COMBO
def_value: External
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: :SOUR:ROSC:SOUR
group: Oscillator Sources
section: Local Oscillator

[LO frequency]
tooltip: "Selects the source of the local oscillator signal"
datatype: COMBO
combo_def_1: 10MHZ
combo_def_2: 100MHZ
combo_def_3: 1000MHZ
cmd_def_1: 10MHZ
cmd_def_2: 100MHZ
cmd_def_3: 1000MHZ
state_quant: LO source
state_value_1: External
set_cmd: :SOUR:ROSC:EXT:FREQ
group: Oscillator Sources
section: Local Oscillator

[LO output source]
tooltip: "Determines the signal provided at the output connector LO OUT"
datatype: COMBO
combo_def_1: Off
combo_def_2: Local Oscillator
combo_def_3: Reference Oscillator
cmd_def_1: OFF
cmd_def_2: LO
cmd_def_3: REF
set_cmd: :CONN:REFL:OUTP
model_value_1: SGS100A
group: Oscillator Sources
section: Local Oscillator

##################
# I/Q Modulation #
##################

[I/Q modulation]
datatype: BOOLEAN
def_value: False
set_cmd: :SOUR:IQ:STAT
group: I/Q Mixer
#section: Modulation
model_value_1: SGS100A
model_value_2: SMW200A                  

[I/Q wideband]
datatype: BOOLEAN
tooltip: Off: 100 MHz IQ Bandwidth, On: 1 GHz IQ Bandwidth
def_value: False
set_cmd: :SOUR:IQ:WBST
group: I/Q Mixer
state_quant: I/Q modulation
state_value_1: On
model_value_1: SGS100A
model_value_2: SMW200A 

[I/Q Adjustments]
datatype: BOOLEAN
def_value: False
state_quant: I/Q modulation
state_value_1: On
set_cmd: :SOUR:IQ:IMP:STAT
group: I/Q Mixer
model_value_1: SGS100A
model_value_2: SMW200A   
#section: Modulation

[I offset]
unit: %
datatype: DOUBLE
low_lim: -5
high_lim: 5
def_value: 0E-3
state_quant: I/Q Adjustments
state_value_1: On
set_cmd: :SOUR:IQ:IMP:LEAK:I
group: I/Q Mixer
model_value_1: SGS100A
model_value_2: SMW200A   
#section: Modulation

[Q offset]
unit: %
datatype: DOUBLE
low_lim: -5
high_lim: 5
def_value: 0E-3
state_quant: I/Q Adjustments
state_value_1: On
set_cmd: :SOUR:IQ:IMP:LEAK:Q
group: I/Q Mixer
model_value_1: SGS100A
model_value_2: SMW200A   
#section: Modulation

[Gain imbalance]
unit: dB
datatype: DOUBLE
low_lim: -1
high_lim: 1
def_value: 0
state_quant: I/Q Adjustments
state_value_1: On
set_cmd: :SOUR:IQ:IMP:IQR
group: I/Q Mixer
model_value_1: SGS100A
model_value_2: SMW200A   

[IQ Skew]
unit: deg
datatype: DOUBLE
low_lim: -8
high_lim: 8
def_value: 0
state_quant: I/Q Adjustments
state_value_1: On
set_cmd: :SOUR:IQ:IMP:QUAD
group: I/Q Mixer
model_value_1: SGS100A
model_value_2: SMW200A   

[Calibrate IQ at current frequency]
datatype: BUTTON
state_quant: I/Q Adjustments
state_value_1: On
set_cmd: :CAL:IQM:LOC
group: I/Q Mixer
model_value_1: SGS100A
model_value_2: SMW200A   

####################
# Pulse Modulation #
####################
[Pulse modulation]
tooltip: "Turns the modulation on and off"
datatype: BOOLEAN
def_value: False
set_cmd: SOUR:PULM:STAT
model_value_1: SMW200A
model_value_2: SGS100A
group: Pulse Modulation
section: Pulse Modulation

[Pulse modulation source]
tooltip: "Selects between the internal (pulse generator) or an external pulse signal for the modulation"
datatype: COMBO
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: :SOUR:PULM:SOUR
state_quant: Pulse modulation
state_value_1: True
model_value_1: SMW200A
model_value_2: SGS100A
group: Modulation source and trigger settings
section: Pulse Modulation

[Pulse generator]
tooltip: "Turns the internal pulse generator on and off"
datatype: BOOLEAN
def_value: True
set_cmd: :SOUR:PGEN:OUTP:STAT
state_quant: Pulse modulation source
state_value_1: Internal
model_value_1: SMW200A
group: Modulation source and trigger settings
section: Pulse Modulation

[Trigger mode]
tooltip: "Selects a trigger mode - auto, external, external single or external gated - for generating the modulation signal"
datatype: COMBO
combo_def_1: Auto
combo_def_2: External
combo_def_3: External gated
combo_def_4: External single
cmd_def_1: AUTO
cmd_def_2: EXT
cmd_def_3: EGAT
cmd_def_4: ESIN
set_cmd: :SOUR:PULM:TRIG:MODE
model_value_1: SMW200A
state_quant: Pulse modulation
state_value_1: True
group: Modulation source and trigger settings
section: Pulse Modulation

[Trigger impedance]
tooltip: "Sets the impedance for the external pulse trigger"
datatype: COMBO
combo_def_1: 50 Ohm
combo_def_2: 10 kOhm
cmd_def_1: G50
cmd_def_2: G10K
state_quant: Trigger mode
state_value_1: External
state_value_2: External single
state_value_3: External gated
set_cmd: :SOUR:PULM:TRIG:EXT:IMP
model_value_1: SMW200A
group: Modulation source and trigger settings
section: Pulse Modulation

[Transition mode]
tooltip: "Sets the transition mode for the pulse signal"
datatype: COMBO
combo_def_1: Smoothed
combo_def_2: Fast
cmd_def_1: SMO
cmd_def_2: FAST
set_cmd: :SOUR:PULM:TTYP
state_quant: Pulse modulation source
state_value_1: Internal
model_value_1: SMW200A
group: Modulation source and trigger settings
section: Pulse Modulation

[Internal pulse polarity]
tooltip: "Sets the polarity of the pulse video (modulating) signal, related to the RF (modulated) signal"
datatype: COMBO
combo_def_1: Normal
combo_def_2: Inverted
cmd_def_1: NORM
cmd_def_2: INV
state_quant: Pulse modulation source
state_value_1: Internal
set_cmd: :SOUR:PULM:OUTP:VID:POL
model_value_1: SMW200A
group: Modulation source and trigger settings
section: Pulse Modulation

[External pulse polarity]
tooltip: "Sets the polarity of the externally applied modulation signal"
datatype: COMBO
combo_def_1: Normal
combo_def_2: Inverted
cmd_def_1: NORM
cmd_def_2: INV
state_quant: Pulse modulation source
state_value_1: External
set_cmd: :SOUR:PULM:POL
model_value_1: SMW200A
group: Modulation source and trigger settings
section: Pulse Modulation

[Pulse modulation input impedance]
tooltip: "Sets the impedance for the external pulse modulation input"
datatype: COMBO
combo_def_1: 50 Ohm
combo_def_2: 1 kOhm
cmd_def_1: G50
cmd_def_2: G1K
state_quant: Pulse modulation source
state_value_1: External
set_cmd: :SOUR:PULM:IMP
model_value_1: SMW200A
group: Modulation source and trigger settings
section: Pulse Modulation

[Pulse mode]
tooltip: "Selects the mode for the pulse modulation (generates either a single pulse or two pulses within one pulse period)"
datatype: COMBO
combo_def_1: Single
combo_def_2: Double
cmd_def_1: SING
cmd_def_2: DOUB
set_cmd: :SOUR:PULM:MODE
state_quant: Pulse generator
state_value_1: True
model_value_1: SMW200A
group: Pulse settings
section: Pulse Modulation

[Pulse period]
tooltip: "Sets the period of the generated pulse, that means the repetition frequency of the internally generated modulation signal"
unit: s
datatype: DOUBLE
def_value: 10.E-6
low_lim: 20.E-9
high_lim: 100.
set_cmd: :SOUR:PULM:PER
state_quant: Pulse generator
state_value_1: True
model_value_1: SMW200A
group: Pulse settings
section: Pulse Modulation

[Pulse delay]
tooltip: "Sets the pulse delay"
unit: s
datatype: DOUBLE
def_value: 0
set_cmd: :SOUR:PULM:DEL
state_quant: Pulse generator
state_value_1: True
model_value_1: SMW200A
group: Pulse settings
section: Pulse Modulation

[Pulse width]
tooltip: "Sets the width of the generated pulse, that means the pulse length. It must be at least 20ns less than the set pulse period"
unit: s
datatype: DOUBLE
def_value: 1.E-6
low_lim: 20.E-9
high_lim: 100.
set_cmd: :SOUR:PULM:WIDT
state_quant: Pulse generator
state_value_1: True
model_value_1: SMW200A
group: Pulse settings
section: Pulse Modulation

[Second pulse delay]
tooltip: "Sets the delay from the start of the first pulse to the start of the second pulse"
unit: s
datatype: DOUBLE
def_value: 2.E-6
set_cmd: :SOUR:PULM:DOUB:DEL
state_quant: Pulse mode
state_value_1: Double
model_value_1: SMW200A
group: Pulse settings
section: Pulse Modulation

[Second pulse width]
tooltip: "Sets the width of the second pulse"
unit: s
datatype: DOUBLE
def_value: 1.E-6
low_lim: 20.E-9
high_lim: 100.
set_cmd: :SOUR:PULM:DOUB:WIDT
state_quant: Pulse mode
state_value_1: Double
model_value_1: SMW200A
group: Pulse settings
section: Pulse Modulation